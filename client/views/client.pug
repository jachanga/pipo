doctype html
html(lang="en", class="js")
  head
    title PiPo
    |!{preDeps}
  body
    #mainContainer
      ul#chat.chat-window
      header#header-wrapper.chat-header
        #header
          .chat-header__avatar
            i.huge.comments.outline.icon
          .chat-header__buttons
            .chat-header__favorite
              i.empty.star.icon
            .chat-header__settings
              .ui.icon.top.left.pointing.dropdown.button
                i.wrench.icon
                .menu
                  .header Room Options
                  .item.room-options.manage-members Manage Members
                  .item.room-options.edit-room Edit Room
                  .ui.divider
                  .item
                    i.dropdown.icon
                    span.text Advanced
                    .menu
                      .item
                        i.check.icon
                        |                       Something Advanced
                  .item
                    i.dropdown.icon
                    span.text Admin
                    .menu
                      .item
                        i.check.icon
                        |                       Destroy History
                      .item
                        i.check.icon
                        |                       Delete Room
                  .item.room-options.leave-room Leave Room
                  .item Help
          .chat-header__content
            h2.js-chat-name(title='', data-original-title='')
              a.chat-header__title(target='_blank') ...
            p.chat-topic ...
      #menu
        #left-menu-profile
          #menu-header-profile
            .ui.labeled.pointing.dropdown.header-profile-dropdown
              .trpDisplayPicture.avatar-s.avatar(style='', data-original-title='')
              span.text.username Sign In
              i.chevron.down.icon
              #options-menu-dropdown.menu
                #edit-profile-button.item
                  i.edit.icon
                  |  Edit Profile
                #import-keypair-button.item
                  i.sign.in.icon
                  |  Sign In ( Import existing key pair )
                #export-keypair-button.item
                  i.download.icon
                  |  Export client key pair
                #generate-keypair-button.item
                  i.spy.icon
                  |  Generate new client key pair
                #sign-out-button.item
                  i.sign.out.icon
                  |  Sign Out ( Unloads current key pair )
        #left-menu-scroll
          .room-list-container
            h5.room-list-header Active Rooms
            i#room-list-button.menu-icon.search.icon
            i#add-room-button.add-room-icon.plus.square.outline.icon
            ul#room-list
          .chat-list-container
            h5.chat-list-header Private Chats
            i.menu-icon.search.icon
            i.add-user-icon.plus.square.outline.icon
            #chat-list
          #menu-actions
      #right-menu-container.right-menu-container
        header#right-menu-header-wrapper.right-menu-header-wrapper
        .user-list-container
          #user-list
        #right-menu-content-wrapper.right-menu-content-wrapper
          #right-menu-user-actions.right-menu-user-actions
    #input-container.input-container
      form#message-input-form
        #message-input-container.ui.left.fluid.action.icon.input.loading
          .message-input__add
            .ui.icon.plus.dropdown.button(disabled='true')
              i#add-button-icon.plus.icon
              .menu
                .item.send-file-button
                  i#send-file-button.add-button.file.icon
                  span.text Upload File to Chat (encrypted)
          textarea#message-input.message-input.ui.left.icon.loading(autocorrect='off', spellcheck='true', autocomplete='off', type='text', placeholder='          Please wait while your secure connection is configured...')
          i#loading-icon.search.icon
          button#send-button.ui.button(disabled='true') Send
    .ui.form.basic.modal.password-prompt-modal
      i.close.icon
      .header
        | Decrypt Master Key
      .ui
        .description
          p Please enter your client key password...
        .ui.input
          input(name='keyPassword', type='password', placeholder='password')
      .actions
        .two.fluid.ui.inverted.buttons
          .ui.red.basic.inverted.button
            i.remove.icon
            |             Cancel
          .ui.green.basic.inverted.button.password-submit-button
            i.checkmark.icon
            |             Ok
    .ui.form.basic.modal.key-creds-modal
      i.close.icon
      .header
        | Enter your key information
      .ui
        .description
          p Username:
        .ui.input
          input(name='username', type='username', placeholder='User Name')
        .description
          p Full Name:
        .ui.input
          input(name='fullname', type='fullname', placeholder='Full Name')
        .description
          p Email:
        .ui.input
          input(name='email', type='email', placeholder='Email')
        .description
          p Please enter a strong password:
      .actions
        .two.fluid.ui.inverted.buttons
          .ui.red.basic.inverted.button
            i.remove.icon
            |             Cancel
          .ui.green.basic.inverted.button.key-creds-submit-button
            i.checkmark.icon
            |             Ok
    .ui.form.modal.import-keypair-modal
      i.close.icon
      .header
        | Import Client Key Pair
      .ui
        .description
          p Please add the following information and select your public and private key and click OK to load your user
          p
        form.ui.form.content.create
          .field
            label(for='username') Username
            input#username-input.username-input(type='text')
          .field
            label(for='fullname') Full Name
            input#fullname-input.fullname-input(type='text')
          .field
            label(for='email') Email
            input#email-input.email-input(type='email')
          .ui
            a#select-publickey(href='#') Public Key:
            input#publickey-file-input(type='file')
          .ui
            a#select-privatekey(href='#') Private Key:
            input#privatekey-file-input(type='file')
      .actions
        .ui.button.approve.red.cancel
          i.remove.icon
          |           Cancel
        .ui.button.approve.green.import-keypair-submit-button
          i.checkmark.icon
          |           Ok
    .ui.small.modal.initial
      .header Register or Sign In
      .content
        | You do not appear to have signed in from this computer before. Would you like to Register as a new user or Sign In using your existing keys?
      .actions
        .ui.button.approve.green.register(data-value='generate') Register ( new user )
        .ui.button.approve.blue.signin(data-value='authenticate') Sign In ( I have my keys )
    .ui.small.modal.register
      .header Register
      form.ui.form.error.segment.register
        .field Select a username and a passphrase to encrypt your keys
        .two.fields
          #registerError.field(style='display: none; color: red')
          .field
            label Username
            input.username(type='text', name='username', placeholder='Username')
          .field
            label Real Name
            input.name(name='name', type='text', placeholder='Real Name')
        .field
          label Email
          input.email(type='email', name='email', placeholder='Email')
        .field
          label Password
          input.registerPassword(type='password', name='registerPassword', placeholder='Password')
        .field
          label Confirm Password
          input(type='password', name='confirmPassword', placeholder='Confirm Password')
        .actions
          .ui.green.submit.button OK
          .ui.error.message
    .ui.small.modal.generate
      .header Generate
      .content.center
        i.notched.circle.loading.icon
        |  Generating credentials (this may take a bit)
    .ui.small.modal.unlock
      .header
        | Unlock Credentials for &nbsp
        span.username
      form.ui.form.error.content.unlock
        .field
          | Enter the passphrase you selected to decrypt your keys. You will be prompted for this password once more after you submit this form to sign in.
        #createError.field(style='display: none; color: red')
        .field
          label(for='password') Password
          input#password.password(type='password')
        .actions
          .ui.submit.button.green.decrypt Decrypt
          .ui.cancel.button.red Cancel
          .ui.error.message
    .ui.small.modal.authenticate
      .header Authenticate
      .content Please select your credentials
      .actions
        .ui.button.approve.green(data-value='generate') Generate
        .ui.button.approve.blue(data-value='authenticate') Authenticate
    .ui.small.modal.joinroom
      .header Authenticate
      .content Please select your credentials
      .actions
        .ui.button.approve.green(data-value='generate') Generate
        .ui.button.approve.blue(data-value='authenticate') Authenticate
    .ui.small.long.modal.join-room-list-modal
      i.close.icon
      .header Room List
      .content Select a room to join...
      .ui.list.join-room-list
    .ui.small.long.modal.sendfile
      i.close.icon
      .header
        .title
          | Upload File to Chat (encrypted)
      .content
        form.ui.form.sendfile
          .ui.segment
            a#select-filetosend(href='#') File:
            input#sendfile-file-input(type='file')
      .actions
        .two.fluid.ui.inverted.button
          .ui.cancel.red.basic.button
            i.remove.icon
            |             Cancel
          .ui.ok.green.basic.button
            i.checkmark.icon
            |             Submit
      .progress(id='progress')
    .ui.basic.modal.createroom
      i.close.icon
      .header
        | Create a room
      .content
        form.ui.form.createroom
          .ui.segment
            p(style='color:black;') Please enter the information for your new room.
            .wide.field
              label Name
              input(type='text', name='name')
            .wide.field
              label Topic
              input(type='text', name='topic')
            .field.encryptionscheme
              label Please choose an encryption scheme
              input(name='encryptionscheme', type='hidden', value='clientkey')
              select.ui.search.dropdown.encryptionscheme
                option(value='clientkey') Client Key
                option(value='masterkey') Master Key
            .field
              label Keep Message History
              input(name='messagehistory', type='hidden', value='keep')
              select.ui.search.dropdown.messagehistory
                option(value='keep') Keep
                option(value='dontkeep') Don't Keep
            .field
              label Membership Required
              input(name='membershiprequired', type='hidden', value='private')
              select.ui.search.dropdown.membershiprequired
                option(value='private') Private
                option(value='public') Public
          // Below tag is the placeholder/container for the error messages
          .ui.error.message
      .actions
        .two.fluid.ui.inverted.buttons
          .ui.cancel.red.basic.inverted.button
            i.remove.icon
            |             Cancel
          .ui.ok.green.basic.inverted.button
            i.checkmark.icon
            |             Submit
    .ui.small.modal.error
      .header Error
      .content Some horrible error occurred
      .actions
        .ui.button.approve.blue.cancel
          i.remove.icon
          |           Ok
    .ui.small.modal.profile
      .header Profile
      form.ui.form.content.profile
        .field Enter your information
        #createError.field(style='display: none; color: red')
        .field
          label(for='username') Username
          input#username.username(type='text')
        .field
          label(for='fullname') Full Name
          input#fullname.fullname(type='fullname')
        .field
          label(for='email') Email
          input#email.email(type='email')
      .actions
        .ui.button.approve.green.go(data-value='go') Go
    .ui.popup.left.center.transition.hidden.userPopup
      .userPopupAvatar
        .avatar(style='float: left')
      .userPopupInfo
        .userPopupNames
          h2.fullName Full Name
          h3.username
            a(href='http://pipo.chat/users/username', target='_blank') username
        .userPopupStats
          | 5 followers  66 repos  4 following
        .userPopupContact
          a.email(href='mailto:email@address.com') email@address.com
        .userPopupButtons
          button#button-onetoone.privateChatButton.buttonSmall
            | Chat Privately
    .ui.form.basic.modal.editroom
      i.close.icon
      .header
        | Editing Room
      .content
        form.ui.form.editroom
          .ui.segment
            input(name='id', type='hidden')
            .wide.field
              label Name
              input(type='text', name='name')
            .wide.field
              label Group
              input(type='text', name='group')
            .wide.field
              label Topic
              input(type='text', name='topic')
            .field.encryptionscheme
              label Encryption scheme
              input(name='encryptionscheme', type='hidden')
              select.ui.search.dropdown.encryptionscheme
                option(value='clientkey') Client Key
                option(value='masterkey') Master Key
            .field
              label Message History
              input(name='keep-history', type='hidden')
              select.ui.search.dropdown.keephistory
                option(value='true') Keep
                option(value='false') Don't Keep
            .field
              label Privacy
              input(name='membership-required', type='hidden')
              select.ui.search.dropdown.membershiprequired
                option(value='true') Private
                option(value='false') Public
          // Below tag is the placeholder/container for the error messages
          .ui.error.message
      .actions
        .two.fluid.ui.inverted.buttons
          .ui.cancel.red.basic.inverted.button
            i.remove.icon
            |             Cancel
          .ui.ok.green.basic.inverted.button
            i.checkmark.icon
            |             Save
    .ui.modal.manage-members-modal
      i.close.icon
      .header
        | Manage Members
      .content
        input.roomname(type='hidden')
        #manageMembersError.field(style='display: none; color: red')
        #manageMembersMessage.field(style='display: none; color: green')
        .add-member-header
          | Add Member
        .ui.right.labeled.input
          .ui.search
            .ui.icon.input
              input.prompt.membername(type='text', placeholder='Username...')
              i.search.icon
            .results
          .ui.dropdown.label.addmember
            .text member
            i.dropdown.icon
            .menu.membership
              .item member
              .item admin
              .item owner
        button.ui.primary.button.addmember
          | Add
        .manage-members-header
          | Members
        ul.manage-members-list
      .actions
  if(platform == "electron")
    script.
      window.config = !{JSON.stringify(config)};
      window.$ = window.jQuery = require('jquery');
      window.io = io = require('socket.io-client');
      window.async = require('async');
  else
    script(src='/socket.io/socket.io.js')
    script.
      var config = !{JSON.stringify(config)};
    if(config)
      script.
        window.config = !{JSON.stringify(config)};
  |!{postDeps}
